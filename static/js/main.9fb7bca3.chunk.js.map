{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/Home/Home.js","components/Loader/Loader.js","components/IpCardInfo/IpCardInfo.js","utils.js","components/IpLocal/IpLocal.js","components/IpCardField/IpCardField.js","components/IpCard/IpCard.js","components/IpForm/IpForm.js","components/IpSearched/IpSearched.js","components/IpSavedCard/IpSavedCard.js","components/IpContainer/IpContainer.js","components/Error/Error.js","components/App/App.js","index.js"],"names":["Nav","className","to","Header","Home","href","target","Loader","IpCardInfo","ip","saveToStorage","class","version","country_name","country_code","country_capital","country_calling_code","country_area","country_population","city","region","postal","latitude","longitude","timezone","currency_name","languages","asn","org","onClick","fetchLocalIp","a","fetch","response","ok","status","Error","json","data","console","log","message","fetchAllExternalIp","ipAddress","IpLocal","useState","requestLocalIp","setRequestLocalIp","useEffect","getLocalIpInfo","then","localStorage","setItem","JSON","stringify","IpCardField","field","ipField","IpCard","IpForm","getRequestedIpInfo","setIpAddress","setIpField","clearInputs","type","placeholder","name","value","onChange","event","Name","Value","Vlaue","Values","map","list","preventDefault","IpSearched","requestIpInfo","setRequestIpInfo","ipFieldInfo","error","Date","now","IpSavedCard","deleteFromStorage","IpContainer","ipCardsData","setIpCardsData","retrieveFromStorage","getStoredPosts","Object","keys","ipData","parse","getItem","createIpCards","removeItem","cardsContainer","info","src","alt","App","exact","path","render","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9fb7bca3.chunk.js","sourcesContent":["import './Nav.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n    <div className=\"nav\">\n      <NavLink className='go-home' to=\"/\">\n        <p className=\"nav-buttons\">Home</p>\n      </NavLink>\n      <NavLink className='go-local-ip' to=\"local-ip\">\n        <p className=\"nav-buttons\">Local IP</p>\n      </NavLink>\n      <NavLink className='go-search-ip' to=\"/searched-ip\">\n        <p className=\"nav-buttons\">Search IP</p>\n      </NavLink>\n      <NavLink className='go-saved-ips' to=\"/saved-ip\">\n        <p className=\"nav-buttons\">Saved IPs</p>\n      </NavLink>\n    </div>\n  );\n}\n\nexport default Nav;","import './Header.css';\nimport PropTypes from 'prop-types';\nimport Nav from '../Nav/Nav';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>Suspicious IP</h1>\n      <Nav />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  Nav: PropTypes.element\n}\n\nexport default Header;","import './Home.css';\nimport PropTypes from 'prop-types';\nfunction Home() {\n  return (\n    <div className=\"home-view\">\n      <h2 className=\"home-header\">Welcome !</h2>\n      <p className=\"about-text\">This app will allow you to generate a report with\n        information from a local or unidentified IP Addresses \n        in your network, with the opportunity to save those\n        reports inside of the app.</p>\n        <p className=\"about-text\">This app is using \n          <a href=\"https://ipapi.co/api/#introduction\" target=\"_blank\"> ipapi </a> API </p>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  Home: PropTypes.element,\n}\n\nexport default Home;","import React from 'react';\nimport './Loader.css'\n\nconst Loader = () => {\n    return  (\n        <h2 className='loading'>Loading...</h2>\n    )\n}\n\nexport default Loader;","import './IpCardInfo.css'\nimport React from 'react';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst IpCardInfo = ({ip, saveToStorage}) => {\n  if (!ip) {\n    return (<Loader />)\n  } \n  return (\n    <div className=\"single-card\">\n      <p className=\"ip-card-text\"><i class=\"fas fa-code-branch\"></i> <b>IP:</b> <i>{ip.ip}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-atlas\"></i> <b>Version:</b> <i>{ip.version}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-globe-americas\"></i> <b>Country Name:</b> <i>{ip.country_name}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-code\"></i> <b>Country Code:</b> <i>{ip.country_code}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-map-signs\"></i> <b>Country Capital:</b> <i>{ip.country_capital}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-code\"></i> <b>Country Calling Code:</b> <i>{ip.country_calling_code}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-map-pin\"></i> <b>Country Area:</b> <i>{ip.country_area}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-user-friends\"></i> <b>Country Population:</b> <i>{ip.country_population}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fab fa-font-awesome-flag\"></i> <b>City:</b> <i>{ip.city}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-map-marked\"></i> <b>Region:</b> <i>{ip.region}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-mail-bulk\"></i> <b>Postal:</b> <i>{ip.postal}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-sort-numeric-up\"></i> <b>Latitude:</b> <i>{ip.latitude}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-sort-numeric-down-alt\"></i> <b>Longitude:</b> <i>{ip.longitude}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-hourglass-half\"></i> <b>Timezone:</b> <i>{ip.timezone}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-money-check-alt\"></i> <b>Currency:</b> <i>{ip.currency_name}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-language\"></i> <b>Languages:</b> <i>{ip.languages}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-barcode\"></i> <b>ASN:</b> <i>{ip.asn}</i></p>\n      <p className=\"ip-card-text\"><i class=\"fas fa-sitemap\"></i> <b>Organization:</b> <i>{ip.org}</i></p>\n      <button className=\"saved-button\" onClick={saveToStorage}>Save <i class=\"fas fa-hdd\"></i></button>\n    </div>\n  )\n}\n\nIpCardInfo.propTypes = {\n  ip: PropTypes.object,\n  saveToStorage: PropTypes.func,\n  Loader: PropTypes.element\n}\n\nexport default IpCardInfo;\n","const fetchLocalIp = async () => {\n  try {\n    const response = await fetch('https://ipapi.co/json/')\n    if (!response.ok || response.status === 500) {\n      throw Error('Error fetching local IP Info')\n    }\n    const data = await response.json()\n    return data\n  } catch(err) {\n    console.log(err.message)\n    return err;\n  }\n}\n\nconst fetchAllExternalIp = async (ipAddress) => {\n  try {\n    const response = await fetch(`https://ipapi.co/${ipAddress}/json/`)\n    if (!response.ok || response.status === 500) {\n      throw Error('Error fetching local IP Info')\n    }\n    const data = await response.json()\n    // console.log('test fetch all:', data)\n    return data\n  } catch(err) {\n    console.log(err.message)\n    return err;\n  }\n}\n\nconst fetchFieldExternalIp = async (ipAddress, ipField) => {\n  try {\n    const response = await fetch(`https://ipapi.co/${ipAddress}/${ipField}/`)\n    if (!response.ok || response.status === 500) {\n      throw Error('Error fetching local IP Info')\n    }\n    const data = await response.text()\n    // console.log('test fetch field:', data)\n    return data\n  } catch(err) {\n    console.log(err.message)\n    return err;\n  }\n}\n\nexport { fetchLocalIp, fetchAllExternalIp, fetchFieldExternalIp };","import './IpLocal.css';\nimport React, { useState, useEffect } from 'react';\nimport IpCardInfo from '../IpCardInfo/IpCardInfo';\nimport PropTypes from 'prop-types';\nimport { fetchLocalIp } from '../../utils';\n\nconst IpLocal = () => {\n  const [requestLocalIp, setRequestLocalIp] = useState({});\n\n  useEffect(() => {\n    getLocalIpInfo()\n  }, [])\n\n  const getLocalIpInfo = () => {\n    return fetchLocalIp()\n    .then(data => setRequestLocalIp(data))\n  }\n\n  const saveToStorage = () => {\n    localStorage.setItem(requestLocalIp.ip, JSON.stringify(requestLocalIp))\n  }\n  \n  return  (\n    <div className=\"ip-card-info\">\n      <IpCardInfo ip={requestLocalIp} saveToStorage={saveToStorage}/>\n    </div>\n  )\n}\n\nIpLocal.propTypes = {\n  requestLocalIp: PropTypes.object,\n  getLocalIpInfo: PropTypes.func,\n  saveToStorage: PropTypes.func,\n  IpCardInfo: PropTypes.element\n}\n\nexport default IpLocal;","import './IpCardField.css'\nimport React from 'react';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst IpCardField = ({field, ipField, ipAddress, saveToStorage}) => {\n  if (!field) {\n    return (<Loader />)\n  }\n  return (\n    <div className=\"single-card-field\">\n      <h2 className=\"header-field\">IP Field Requested:</h2>\n      <h3>{field}:</h3>\n      <h4>{ipField}</h4>\n      <h4>IP #: {ipAddress}</h4>\n      <button className=\"saved-button-field\" onClick={saveToStorage}>Save <i class=\"fas fa-hdd\"></i></button>\n    </div>\n  );\n}\n\nIpCardField.propTypes = {\n  field: PropTypes.string,\n  ipField: PropTypes.string,\n  ipAddress: PropTypes.string,\n  saveToStorage: PropTypes.func,\n  Loader: PropTypes.element\n}\n\nexport default IpCardField;","import './IpCard.css'\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport IpCardField from '../IpCardField/IpCardField';\nimport IpCardInfo from '../IpCardInfo/IpCardInfo';\n\nconst IpCard = ({ip, ipField, ipAddress, saveToStorage}) => {\n  if (ipField === \"all\") {\n    return (\n      <div className=\"ip-card-info\">\n        <IpCardInfo ip={ip} saveToStorage={saveToStorage}/>\n      </div>\n    )\n  } \n  return (\n    <IpCardField field={ipField}  ipField={ip[ipField]} ipAddress={ipAddress} saveToStorage={saveToStorage}/>\n  )\n}\n\nIpCard.propTypes = {\n  ip: PropTypes.object,\n  ipField: PropTypes.string,\n  ipAddress: PropTypes.string,\n  saveToStorage: PropTypes.func,\n  IpCardInfo: PropTypes.element,\n  IpCardField: PropTypes.element,\n}\n\nexport default IpCard;","import './IpForm.css'\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst IpForm = ({getRequestedIpInfo}) => {\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [ipField, setIpField] = useState(\"\");\n  const ipFieldsContainer = [\n  {Name:'Select a field', Value:''}, {Name:'All', Value:'all'}, {Name:'Ip', Value:'ip'}, {Name:'Version', Value:'version'}, \n  {Name:'City', Value:'city'}, {Name:'Region', Value:'region'}, {Name:'Country Name', Value:'country_name'},\n  {Name:'Country Code', Value:'country_code'}, {Name:'Country Capital', Value:'country_capital'}, \n  {Name:'Country Calling Code', Value:'country_calling_code'}, {Name:'Country Area', Value:'country_area'},\n  {Name:'Country Population', Vlaue:'country_population'}, {Name:'Country Postal', Value:'postal'},\n  {Name:'Latitude', Value:'latitude'}, {Name:'Longitude', Value:'longitude'},{Name:'Timezone', Value:'timezone'},\n  {Name:'Currency', Value:'currency_name'}, {Name:'Languages', Values:'languages'}, {Name:'ASN', Value:'asn'}, \n  {Name:'Organization', Value:'org'}]\n\n  const searchIp = (event) => {\n    event.preventDefault();\n    getRequestedIpInfo(ipAddress, ipField);\n    clearInputs();\n  }\n\n  const clearInputs = () => {\n    setIpAddress(\"\");\n    setIpField(\"\");\n  }\n\n  return (\n    <form className=\"ip-form-component\">\n      <input\n        type=\"text\"\n        placeholder=\"IP Address\"\n        name=\"ipAddress\"\n        value={ipAddress}\n        onChange={(event) => setIpAddress(event.target.value)}\n      />\n      <select onChange={(event) => setIpField(event.target.value)}>\n        {ipFieldsContainer.map(list => (\n          <option value={list.Value}>\n            {list.Name}\n          </option>\n        ))}\n      </select>\n      <button onClick={searchIp}>Search <i class=\"fas fa-search\"></i></button>\n      <p className=\"form-text\">Type an IP Address and select a filter field.</p>\n    </form>\n  )\n}\n\nIpForm.propTypes = {\n  ipAddress: PropTypes.string,\n  ipField: PropTypes.string,\n  ipFieldsContainer: PropTypes.array,\n  searchIp: PropTypes.func,\n  clearInputs: PropTypes.func,\n  getRequestedIpInfo: PropTypes.func\n}\n\nexport default IpForm;","import './IpSearched.css';\nimport React, { useState } from 'react';\nimport IpCard from '../IpCard/IpCard';\nimport IpForm from '../IpForm/IpForm';\nimport PropTypes from 'prop-types';\nimport { fetchAllExternalIp } from '../../utils';\n\nconst IpSearched = () => {\n  const [requestIpInfo, setRequestIpInfo] = useState({});\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [ipField, setIpField] = useState(\"\");\n  const [completedRequest, setCompletedRequest] = useState(false);\n\n  \n  const getRequestedIpInfo = (ipAddress, ipFieldInfo) => {\n    return fetchAllExternalIp(ipAddress)\n    .then(data => setRequestIpInfo(data))\n    .then(setIpField(ipFieldInfo))\n    .then(setIpAddress(ipAddress))\n    .then(error => console.log(error))\n\n    if (!requestIpInfo) {\n      setCompletedRequest(true)\n    }\n  }\n\n  const saveToStorage = () => {\n    localStorage.setItem(requestIpInfo.ip, JSON.stringify(requestIpInfo))\n  }\n  \n  return  (\n    <div className=\"ipInfo\">\n      <IpForm getRequestedIpInfo={getRequestedIpInfo} />\n       {ipAddress && <IpCard ip={requestIpInfo} ipField={ipField} ipAddress={ipAddress} saveToStorage={saveToStorage} key={ipAddress + Date.now()}/>}\n    </div>\n  )\n}\n\nIpSearched.propTypes = {\n  requestIpInfo: PropTypes.object,\n  ipAddress: PropTypes.string,\n  ipField: PropTypes.string,\n  completedRequest: PropTypes.bool,\n  getRequestedIpInfo: PropTypes.func,\n  saveToStorage: PropTypes.func,\n  IpForm: PropTypes.element,\n  IpCard: PropTypes.element\n}\n\nexport default IpSearched;\n","import './IpSavedCard.css'\nimport React from 'react';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst IpSavedCard = ({ip, deleteFromStorage}) => {\n  \n  const matchIp = () => {\n    deleteFromStorage(ip.ip)\n  }\n\n  if (!ip) {\n    return (<Loader />)\n  } \n  return (\n    <div className=\"single-saved-card\">\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-code-branch\"></i> <b>IP:</b> <i>{!ip.ip ? 'No info requested' : ip.ip}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-atlas\"></i> <b>Version:</b> <i>{!ip.version ? 'No info requested' : ip.version}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-globe-americas\"></i> <b>Country Name:</b> <i>{!ip.country_name ? 'No info requested' : ip.country_name}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-code\"></i> <b>Country Code:</b> <i>{!ip.country_code ? 'No info requested' : ip.country_code}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-map-signs\"></i> <b>Country Capital:</b> <i>{!ip.country_capital ? 'No info requested' : ip.country_capital}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-code\"></i> <b>Country Calling Code:</b> <i>{!ip.country_calling_code ? 'No info requested' : ip.country_calling_code}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-map-pin\"></i> <b>Country Area:</b> <i>{!ip.country_area ? 'No info requested' : ip.country_area}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-user-friends\"></i> <b>Country Population:</b> <i>{!ip.country_population ? 'No info requested' : ip.country_population}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fab fa-font-awesome-flag\"></i> <b>City:</b> <i>{!ip.city ? 'No info requested' : ip.city}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-map-marked\"></i> <b>Region:</b> <i>{!ip.region ? 'No info requested' : ip.region}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-mail-bulk\"></i> <b>Postal:</b> <i>{!ip.postal ? 'No info requested' : ip.postal}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-sort-numeric-up\"></i> <b>Latitude:</b> <i>{!ip.latitude ? 'No info requested' : ip.latitude}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-sort-numeric-down-alt\"></i> <b>Longitude:</b> <i>{!ip.longitude ? 'No info requested' : ip.longitude}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-hourglass-half\"></i> <b>Timezone:</b> <i>{!ip.timezone ? 'No info requested' : ip.timezone}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-money-check-alt\"></i> <b>Currency:</b> <i>{!ip.currency_name ? 'No info requested' : ip.currency_name}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-language\"></i> <b>Languages:</b> <i>{!ip.languages ? 'No info requested' : ip.languages}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-barcode\"></i> <b>ASN:</b> <i>{!ip.asn ? 'No info requested' : ip.asn}</i></p>\n      <p className=\"ip-saved-card-text\"><i class=\"fas fa-sitemap\"></i> <b>Organization:</b> <i>{!ip.org ? 'No info requested' : ip.org}</i></p>\n      <button className=\"delete-button\"onClick={matchIp} ><i class=\"fas fa-trash-alt\"></i> Remove</button>\n    </div>\n    \n  )\n}\n\nIpSavedCard.propTypes = {\n  ip: PropTypes.object,\n  deleteFromStorage: PropTypes.func,\n  matchIp: PropTypes.func,\n  Loader: PropTypes.element\n}\n  \nexport default IpSavedCard;\n","import './IpContainer.css'\nimport React, { useState, useEffect } from 'react';\nimport IpSavedCard from '../IpSavedCard/IpSavedCard';\nimport Carousel from 'react-elastic-carousel';\nimport PropTypes from 'prop-types';\n\nconst IpContainer = () => {\n  const [ipCardsData, setIpCardsData] = useState([]);\n\n  useEffect(() => {\n    retrieveFromStorage()\n  }, [])\n\n  const retrieveFromStorage = () => {\n    const getStoredPosts = Object.keys(localStorage).map(ipData => {\n        return JSON.parse(localStorage.getItem(ipData))\n    })\n    setIpCardsData(getStoredPosts);\n    createIpCards(ipCardsData);\n  }\n    \n  const deleteFromStorage = (data) => {\n    localStorage.removeItem(data)\n    retrieveFromStorage()\n    // console.log(data, \"data in container\")\n  }\n\n  const createIpCards = (ipCardsData) => {\n    const cardsContainer = ipCardsData.map(info => {\n      return (\n        <IpSavedCard ip={info} deleteFromStorage={deleteFromStorage} key={info.ip}/>\n       )\n    })\n    return (\n      <Carousel>\n        {cardsContainer}\n      </Carousel>\n    )\n  }\n\n  return  (\n    <div className=\"saved-cards-container\">\n      {ipCardsData ? createIpCards(ipCardsData) : <p className=\"no-saved-cards\">No saved IPs so far !</p>}\n    </div>\n  )\n}\n\nIpContainer.propTypes = {\n  ipCardsData: PropTypes.array,\n  retrieveFromStorage: PropTypes.func,\n  deleteFromStorage: PropTypes.func,\n  createIpCards: PropTypes.func,\n  IpSavedCard: PropTypes.element\n}\n\nexport default IpContainer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Error.css';\n\nconst Error = () => {\n  return (\n    <div className='error'>\n      <NavLink to='/'>\n        <img className='error-img' src=\"https://img.freepik.com/free-vector/404-error-page-found-lamp-broken-background_114341-57.jpg?size=626&ext=jpg\" alt=\"404-img\"/>\n      </NavLink>\n    </div>\n  )\n}\n\nError.propTypes = {\n  Error: PropTypes.element\n}\n\nexport default Error;","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport Home from '../Home/Home';\nimport IpLocal from '../IpLocal/IpLocal';\nimport IpSearched from '../IpSearched/IpSearched';\nimport IpContainer from '../IpContainer/IpContainer';\nimport Error from '../Error/Error';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"main-section\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />}/>\n          <Route exact path=\"/local-ip\" render={() => <IpLocal />}/>\n          <Route exact path=\"/searched-ip\" render={() => <IpSearched />}/>\n          <Route exact path=\"/saved-ip\" render={() => <IpContainer />}/>\n          <Route path=\"*\" render={() => <Error />}/>\n        </Switch>\n      </main>\n    </div>\n  )\n}\n\nApp.propTypes = {\n  Header: PropTypes.element,\n  IpLocal: PropTypes.element,\n  IpSearched : PropTypes.element,\n  IpContainer : PropTypes.element,\n  Error: PropTypes.element\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = <BrowserRouter> <App /> </BrowserRouter>;\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}